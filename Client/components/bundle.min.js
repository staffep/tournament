angular.module("myApp.modal",[]);myApp.component("myModal",{templateUrl:"../views/playoffmodal.html",bindings:{modalInstance:"<",resolve:"<"},controller:[function(){var n=this;n.modalData=n.resolve.matchup;n.bracket=n.resolve.bracket;n.handleClose=function(){n.modalInstance.close({matchup:n.modalData,bracket:n.bracket})};n.handleDismiss=function(){console.info("in handle dismiss");n.modalInstance.dismiss("cancel")};n.calcScore=function(n){n.totalresults[0]=0;n.totalresults[1]=0;n.matches.forEach(function(t){t[0]>t[1]?n.totalresults[0]++:t[0]<t[1]&&n.totalresults[1]++})}}]});angular.module("myApp.playoff",[]);myApp.controller("PlayOffController",["$scope","_tournament","globalVars","$uibModal",function(n,t,i,r){n.bracket={playoffMeetings:new Number,results:[]};n.bracketButtonIsClicked=!1;n.gameChanged=function(){};n.open=function(i){n.matchup=i;n.showModal=!0;r.open({component:"myModal",resolve:{matchup:function(){return i},bracket:function(){return n.bracket}}}).result.then(function(n){t.updateBracket(new URL(window.location.href).searchParams.get("ID"),n.bracket,function(){});let i=0;n.matchup.totalresults.forEach(function(r){if(r>=Math.round(n.bracket.playoffMeetings/2))for(let r=0;r<n.bracket.results.length;r++)for(let u=0;u<n.bracket.results[r].length;u++)if(n.bracket.results[r][u].id===n.matchup.id)for(let u=0;u<n.bracket.results[r+1].length;u++)for(let f=0;f<n.bracket.results[r+1][u].teams.length;f++)if((n.bracket.results[r+1][u].fromId1===n.matchup.id||n.bracket.results[r+1][u].fromId2===n.matchup.id)&&n.bracket.results[r+1][u].teams[f]==="TBD"){n.bracket.results[r+1][u].teams[f]=n.matchup.teams[i];t.updateBracket(new URL(window.location.href).searchParams.get("ID"),n.bracket,function(){});return}i++})},function(){})};n.ok=function(){n.showModal=!1};n.cancel=function(){n.showModal=!1};n.initBracket=function(){this.idFromParam=new URL(window.location.href).searchParams.get("ID");t.get(this.idFromParam,function(t){t.bracket===""||angular.fromJson(t.bracket).bracketStarted!==!0?n.createBracket(t):n.bracket=angular.fromJson(t.bracket)})};n.createBracket=function(i){var u,o,h,l,r,c,f,s,a;n.bracket.bracketStarted=!0;n.bracket.playoffMeetings=i.playoffMeetings;n.bracket.winsToProceed=Math.round(n.bracket.playoffMeetings/2);this.firstRound=[];let e=i.players.sort(function(n,t){return n.points<t.points?1:n.points>t.points?-1:0}).slice(0,parseInt(i.teamsToPlayoff));while(e.length)this.firstRound.push([e.length!==0?e.shift().playername:null,e.length!==0?e.pop().playername:null]);for(u=0,x=this.firstRound.length;x>=1;x--)if(x===64||x===32||x===16||x===8||x===4||x===2||x===1){if(o=[],x===this.firstRound.length)for(r=0;r<=x-1;r++){for(h=[],f=0;f<i.playoffMeetings;f++)s=[0,0],h.push(s);l={teams:this.firstRound[r],totalresults:[0,0],matches:h,id:new String(u+1)+"."+new String(r+1)};o.push(l)}else for(r=0;r<=x-1;r++){for(c=[],f=0;f<i.playoffMeetings;f++)s=[0,0],c.push(s);a={teams:["TBD","TBD"],totalresults:[0,0],matches:c,id:new String(u+1)+"."+new String(r+1),fromId1:new String(u)+"."+new String((r+1)*2-1),fromId2:new String(u)+"."+new String((r+1)*2)};o.push(a)}n.bracket.results.push(o);u++}t.updateBracket(new URL(window.location.href).searchParams.get("ID"),n.bracket,function(){})}}]);myApp.directive("tournamentPlayoff",function(){return{templateUrl:"../views/playoff.html"}});angular.module("myApp.settings",[]);myApp.controller("TournamentController",["$http","_tournament","$scope",function(n,t,i){i.checkStatus=function(){window.location.href.indexOf("/tournamentmode")>-1?i.currentStatus="table":(i.currentStatus="settings",i.isCollapsed=!0,this.name="",this.qty=2,this.doubleMeeting=!1,this.playoff=!1,this.teamsToPlayOff=[],i.initMeetings=function(){this.playoffMeetings=this.playoff===!1?0:[1,3,5,7]},this.playoffMeetings=0,this.teamsToPlayoff=function(n){this.possibleTeamsToPlayOff=[1,2,4,8,16,32,64,128];this.teamsToPlayOff=[];for(var t=0;t<this.possibleTeamsToPlayOff.length;t++)n>=this.possibleTeamsToPlayOff[t]&&this.teamsToPlayOff.push(this.possibleTeamsToPlayOff[t])},this.finalTeamsToPlayOff=0,this.team="",this.players=[],this.id=(new Date).getUTCMilliseconds(),this.bracket="",i.teams=[{fullName:"Carolina Hurricanes",abbrevation:"car"},{fullName:"Columbus Blue Jackets",abbrevation:"cbj"},{fullName:"New Jersey Devils",abbrevation:"njd"},{fullName:"New York Islanders",abbrevation:"nyi"},{fullName:"New York Rangers",abbrevation:"nyr"},{fullName:"Philadelphia Flyers",abbrevation:"phi"},{fullName:"Pittsburgh Penguins",abbrevation:"pit"},{fullName:"Washington Capitals",abbrevation:"was"},{fullName:"Boston Bruins",abbrevation:"bos"},{fullName:"Buffalo Sabres",abbrevation:"buf"},{fullName:"Detroit Red Wings",abbrevation:"det"},{fullName:"Florida Panthers",abbrevation:"flo"},{fullName:"Montreal Canadiens",abbrevation:"cbj"},{fullName:"Ottawa Senators",abbrevation:"ott"},{fullName:"Tampa Bay Lightning",abbrevation:"tbl"},{fullName:"Toronto Maple Leafs",abbrevation:"tor"},{fullName:"Chicago Blackhawks",abbrevation:"chi"},{fullName:"Colorado Avalanche",abbrevation:"col"},{fullName:"Dallas Stars",abbrevation:"dal"},{fullName:"Minnesota Wild",abbrevation:"min"},{fullName:"Nashville Predators",abbrevation:"nas"},{fullName:"St.Louis Blues",abbrevation:"stl"},{fullName:"Winnipeg Jets",abbrevation:"win"},{fullName:"Anaheim Ducks",abbrevation:"ana"},{fullName:"Arizona Coyotes",abbrevation:"ari"},{fullName:"Calgary Flames",abbrevation:"cal"},{fullName:"Edmonton Oilers",abbrevation:"edm"},{fullName:"Los Angeles Kings",abbrevation:"lak"},{fullName:"San Jose Sharks",abbrevation:"san"},{fullName:"Vancouver Canucks",abbrevation:"van"},{fullName:"Vegas Golden Knights",abbrevation:"vgk"}],this.getNumber=function(n){return new Array(n)},this.save=function(){this.players.forEach(function(n){i.teams.forEach(function(t){n.team===t.fullName&&(n.team={fullName:t.fullName,abbrevation:t.abbrevation})})});this.settings={tournamentId:this.id,name:this.name,players:this.players,doubleMeeting:this.doubleMeeting,playoff:this.playoff,teamsToPlayoff:this.finalTeamsToPlayOff,playoffMeetings:this.playoffMeetings,games:[],bracket:this.bracket,gamesForEachPlayer:this.doubleMeeting===!0?(this.players.length-1)*2:(this.players.length-1)*1};for(var n=0;n<this.settings.players.length;n++)this.settings.players[n].id=n,this.settings.players[n].gamesplayed=0,this.settings.players[n].wins=0,this.settings.players[n].losses=0,this.settings.players[n].draws=0,this.settings.players[n].otLoss=0,this.settings.players[n].goalsForward=0,this.settings.players[n].goalsAgainst=0,this.settings.players[n].plusminus=0,this.settings.players[n].points=0,this.settings.players[n].playedGames={},this.settings.players[n].finished=!1;t.post(this.settings,function(){i.checkStatus()})},i.earliearTournaments=[],t.getAll(function(n){i.earliearTournaments=n}))};i.checkStatus()}]);myApp.directive("tournamentSettings",function(){return{templateUrl:"../views/settings.html"}});angular.module("myApp.table",[]);myApp.controller("TableController",["$scope","_tournament","globalVars",function(n,t,r){this.idFromParam=new URL(window.location.href).searchParams.get("ID");t.get(this.idFromParam,function(t){r.settings=t;n.Tournament()});n.Tournament=function(){if(r.settings===null||typeof r.settings!="undefined"){if(n.sortDir=!1,n.name=r.settings.name,n.playersArr=r.settings.players,this.fixures=[],n.games=r.settings.games,n.teamsToPlayOff=r.settings.teamsToPlayoff,this.groupFinished=!1,n.sortType="points",n.sortDir=!n.sortDir,n.games.length===0){this.RoundRobin=function(n){var o=[],e=+n+n%2,i=new Array(e-1),r=i.length,s,f,t,u;for(x=e;x--;)i[x]=x+1;for(e^n&&(i[e-1]="_"),t=1;t<r+1;t++)for(t%2!=0&&i[r-(t-1)]!=="_"&&i[0]!=="_"?o.push({r:t,a:i[0],b:i[r-(t-1)]}):i[r-(t-1)]!=="_"&&i[0]!=="_"&&o.push({r:t,a:i[r-(t-1)],b:i[0]}),f=2;f<e/2+1;f++)s=f+(t-2)>=r?(r-(f+(t-2)))*-1:f+(t-2),u=s-(t-2)-t,u>0&&(u=(r-u)*-1),u<r*-1&&(u+=r),i[r+u]!=="_"&&i[r-s]!=="_"&&o.push({r:t,a:i[r+u],b:i[r-s]});return o};var u=this.RoundRobin(n.playersArr.length);for(i=0;i<u.length;i++)this.matchObj={},this.matchObj.gameNr=i+1,this.matchObj.round=u[i].r,this.matchObj.homeTeam=n.playersArr[u[i].a-1],this.matchObj.awayTeam=n.playersArr[u[i].b-1],this.matchObj.homeGoals=new Number,this.matchObj.awayGoals=new Number,this.matchObj.ot=!1,this.matchObj.gamePlayed=!1,n.games.push(this.matchObj);if(r.settings.doubleMeeting)for(x=0;x<u.length;x++)this.matchObj={},this.matchObj.gameNr=x+1,this.matchObj.round=u.length+u[x].r,this.matchObj.homeTeam=n.playersArr[u[x].b-1],this.matchObj.awayTeam=n.playersArr[u[x].a-1],this.matchObj.homeGoals=new Number,this.matchObj.awayGoals=new Number,this.matchObj.ot=!1,this.matchObj.isPlayed=!1,n.games.push(this.matchObj)}n.calcScore=function(t,i){this.homeTeam=t.homeTeam;this.awayTeam=t.awayTeam;t.gamePlayed===!0?(t.homeGoals!=i.homeGoals||t.awayGoals!=i.awayGoals||t.ot!=i.ot)&&(i.homeGoals===null?0:i.homeGoals,i.awayGoals===null?0:i.awayGoals,typeof this.homeTeam.goalsForward=="undefined"&&(this.homeTeam=this.homeTeam[0]),typeof this.awayTeam.goalsForward=="undefined"&&(this.awayTeam=this.awayTeam[0]),this.homeTeam.goalsForward=this.homeTeam.goalsForward-i.homeGoals,this.homeTeam.goalsAgainst=this.homeTeam.goalsAgainst-i.awayGoals,this.homeTeam.plusminus=this.homeTeam.plusminus-(i.homeGoals-i.awayGoals),this.awayTeam.goalsForward=this.awayTeam.goalsForward-i.awayGoals,this.awayTeam.goalsAgainst=this.awayTeam.goalsAgainst-i.homeGoals,this.awayTeam.plusminus=this.awayTeam.plusminus-(i.awayGoals-i.homeGoals),i.homeGoals>i.awayGoals&&i.ot===!1?(this.homeTeam.wins=this.homeTeam.wins===0?0:this.homeTeam.wins-1,this.awayTeam.losses=this.awayTeam.losses===0?0:this.awayTeam.losses-1,this.homeTeam.points=this.homeTeam.points===0?0:this.homeTeam.points-2,this.homeTeam.draws=this.homeTeam.draws===0?0:this.homeTeam.draws+0,this.awayTeam.draws=this.awayTeam.draws===0?0:this.awayTeam.draws+0,this.awayTeam.wins=this.awayTeam.wins===0?0:this.awayTeam.wins+0,this.homeTeam.losses=this.homeTeam.losses===0?0:this.homeTeam.losses+0,this.awayTeam.points=this.awayTeam.points===0?0:this.awayTeam.points+0):i.homeGoals<i.awayGoals&&i.ot===!1?(this.homeTeam.wins=this.homeTeam.wins===0?0:this.homeTeam.wins+0,this.awayTeam.losses=this.awayTeam.losses===0?0:this.awayTeam.losses+0,this.homeTeam.points=this.homeTeam.points===0?0:this.homeTeam.points+0,this.homeTeam.draws=this.homeTeam.draws===0?0:this.homeTeam.draws+0,this.awayTeam.draws=this.awayTeam.draws===0?0:this.awayTeam.draws+0,this.awayTeam.wins=this.awayTeam.wins===0?0:this.awayTeam.wins-1,this.homeTeam.losses=this.homeTeam.losses===0?0:this.homeTeam.losses-1,this.awayTeam.points=this.awayTeam.points===0?0:this.awayTeam.points-2):i.homeGoals===i.awayGoals&&(this.homeTeam.wins=this.homeTeam.wins===0?0:this.homeTeam.wins+0,this.awayTeam.losses=this.awayTeam.losses===0?0:this.awayTeam.losses+0,this.homeTeam.points=this.homeTeam.points===0?0:this.homeTeam.points-1,this.homeTeam.draws=this.homeTeam.draws===0?0:this.homeTeam.draws-1,this.awayTeam.draws=this.awayTeam.draws===0?0:this.awayTeam.draws-1,this.awayTeam.wins=this.awayTeam.wins===0?0:this.awayTeam.wins+0,this.homeTeam.losses=this.homeTeam.losses===0?0:this.homeTeam.losses+0,this.awayTeam.points=this.awayTeam.points===0?0:this.awayTeam.points-1),i.homeGoals>i.awayGoals&&i.ot===!0?(this.homeTeam.wins=this.homeTeam.wins===0?0:this.homeTeam.wins-1,this.awayTeam.losses=this.awayTeam.losses===0?0:this.awayTeam.losses-0,this.homeTeam.points=this.homeTeam.points===0?0:this.homeTeam.points-2,this.homeTeam.draws=this.homeTeam.draws===0?0:this.homeTeam.draws+0,this.awayTeam.draws=this.awayTeam.draws===0?0:this.awayTeam.draws+0,this.awayTeam.wins=this.awayTeam.wins===0?0:this.awayTeam.wins+0,this.homeTeam.losses=this.homeTeam.losses===0?0:this.homeTeam.losses+0,this.awayTeam.points=this.awayTeam.points===0?0:this.awayTeam.points-1,this.homeTeam.otLoss=this.homeTeam.otLoss===0?0:this.homeTeam.otLoss+0,this.awayTeam.otLoss=this.awayTeam.otLoss===0?0:this.awayTeam.otLoss-1):i.homeGoals<i.awayGoals&&i.ot===!0&&(this.homeTeam.wins=this.homeTeam.wins===0?0:this.homeTeam.wins+0,this.awayTeam.losses=this.awayTeam.losses===0?0:this.awayTeam.losses+0,this.homeTeam.points=this.homeTeam.points===0?0:this.homeTeam.points-1,this.homeTeam.draws=this.homeTeam.draws===0?0:this.homeTeam.draws+0,this.awayTeam.draws=this.awayTeam.draws===0?0:this.awayTeam.draws+0,this.awayTeam.wins=this.awayTeam.wins===0?0:this.awayTeam.wins-1,this.homeTeam.losses=this.homeTeam.losses===0?0:this.homeTeam.losses+0,this.awayTeam.points=this.awayTeam.points===0?0:this.awayTeam.points-2,this.homeTeam.otLoss=this.homeTeam.otLoss===0?0:this.homeTeam.otLoss-1,this.awayTeam.otLoss=this.awayTeam.otLoss===0?0:this.awayTeam.otLoss+0),n.calcTable(this.homeTeam,this.awayTeam,t)):(this.homeTeam.gamesplayed++,this.awayTeam.gamesplayed++,t.gamePlayed=!0,n.calcTable(this.homeTeam,this.awayTeam,t))};n.calcTable=function(n,i,r){typeof r.homeGoals=="object"&&(r.homeGoals=0);typeof r.awayGoals=="object"&&(r.awayGoals=0);n.goalsForward=n.goalsForward+r.homeGoals;n.goalsAgainst=n.goalsAgainst+r.awayGoals;n.plusminus=n.plusminus+(r.homeGoals-r.awayGoals);i.goalsForward=i.goalsForward+r.awayGoals;i.goalsAgainst=i.goalsAgainst+r.homeGoals;i.plusminus=i.plusminus+(r.awayGoals-r.homeGoals);r.homeGoals>r.awayGoals&&r.ot===!1?(n.wins=n.wins+1,i.losses=i.losses+1,n.points=n.points+2,n.draws=n.draws+0,i.draws=i.draws+0,i.wins=i.wins+0,n.losses=n.losses+0,i.points=i.points+0):r.homeGoals<r.awayGoals&&r.ot===!1?(n.wins=n.wins+0,i.losses=i.losses+0,n.points=n.points+0,n.draws=n.draws+0,i.draws=i.draws+0,i.wins=i.wins+1,n.losses=n.losses+1,i.points=i.points+2):r.homeGoals===r.awayGoals?(n.wins=n.wins+0,i.losses=i.losses+0,n.points=n.points+1,n.draws=n.draws+1,i.draws=i.draws+1,i.wins=i.wins+0,n.losses=n.losses+0,i.points=i.points+1):r.homeGoals>r.awayGoals&&r.ot===!0?(n.wins=n.wins+1,i.losses=i.losses+0,n.points=n.points+2,n.draws=n.draws+0,i.draws=i.draws+0,i.wins=i.wins+0,n.losses=n.losses+0,i.points=i.points+1,i.otLoss=i.otLoss+1,n.otLoss=n.otLoss+0):r.homeGoals<r.awayGoals&&r.ot===!0&&(n.wins=n.wins+0,i.losses=i.losses+0,n.points=n.points+1,n.draws=n.draws+0,i.draws=i.draws+0,i.wins=i.wins+1,n.losses=n.losses+0,i.points=i.points+2,i.otLoss=i.otLoss+0,n.otLoss=n.otLoss+1);t.update(new URL(window.location.href).searchParams.get("ID"),n,i,function(){})}}else setTimeout(n.Tournament,1e3)}}]);myApp.directive("tournamentTable",function(){return{templateUrl:"../views/table.html"}});